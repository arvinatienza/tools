let mapleader = ","

let g:session_dir = $HOME . '/.vim-sessions/'

let g:NERDTreeQuitOnOpen = 1
let g:NERDTreeShowHidden=1

" Syntastic configuration
"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0

" Syntastic configuration for PHP
"let g:syntastic_php_checkers = ['php', 'phpcs', 'phpmd']
"let g:syntastic_php_phpcs_exec = './bin/phpcs'
"let g:syntastic_php_phpcs_args = '--standard=psr2'
"let g:syntastic_php_phpmd_exec = './bin/phpmd'
"let g:syntastic_php_phpmd_post_args = 'cleancode,codesize,controversial,design,unusedcode'

" Syntastic configuration for Javascript
"let g:syntastic_javascript_checkers=["jslint", "eslint"]
"let g:syntastic_javascript_eslint_exe = 'npm run lint --'

" Syntastic configuration for SCSS
"let g:syntastic_sass_checkers=["sasslint"]
"let g:syntastic_scss_checkers=["sasslint"]



"let g:airline_theme = 'base16'
"let g:airline_theme = 'base16_monokai'
"let g:airline_theme = 'material'

"let g:airline_powerline_fonts = 1
"if !exists('g:airline_symbols')
    "let g:airline_symbols = {}
"endif

"let g:tmuxline_preset = {
      "\'win'  : '#I #W',
      "\'cwin' : '#I #W',
      "\'y'    : '#(date)',
      "\'z'    : '#H'
"}

"let g:tmuxline_preset = {
      "\'a'    : '#S',
      "\'b'    : '#W',
      "\'c'    : '#H',
      "\'win'  : '#I #W',
      "\'cwin' : '#I #W',
      "\'x'    : '%a',
      "\'y'    : '#W %R',
      "\'z'    : '#H'
"}

"let g:tmuxline_separators = {
    "\ 'left' : '',
    "\ 'left_alt': '>',
    "\ 'right' : '',
    "\ 'right_alt' : '<',
    "\ 'space' : ' '}


let g:vdebug_features = { 'max_children': 256 }
let g:vdebug_options = {}
let g:vdebug_options["break_on_open"] = 0
let g:vdebug_options["path_maps"] = { '/var/www/html': getcwd() }
let g:vdebug_options["port"] = 9000

let g:tmux_navigator_save_on_switch = 2

call janus#disable_plugin('gundo')
call janus#disable_plugin('vroom')


" Dim inactive windows using 'colorcolumn' setting
" This tends to slow down redrawing, but is very useful.
" Based on https://groups.google.com/d/msg/vim_use/IJU-Vk-QLJE/xz4hjPjCRBUJ
" XXX: this will only work with lines containing text (i.e. not '~')
" from.
if exists('+colorcolumn')
  function! s:DimInactiveWindows()
    "set nocursorline
    "for i in range(1, tabpagewinnr(tabpagenr(), '$'))
      "let l:range = ""
      "if i != winnr()
        "if &wrap
         "" HACK: when wrapping lines is enabled, we use the maximum number
         "" of columns getting highlighted. This might get calculated by
         "" looking for the longest visible line and using a multiple of
         "" winwidth().
         "let l:width=256 " max
        "else
         "let l:width=winwidth(i)
        "endif
        "let l:range = join(range(1, l:width), ',')
      "endif
      "call setwinvar(i, '&colorcolumn', l:range)
    "endfor
  endfunction
  augroup DimInactiveWindows
    au!
    "au WinEnter * call s:DimInactiveWindows()
    au WinEnter * set cursorline
    au WinLeave * set nocursorline
  augroup END
endif
